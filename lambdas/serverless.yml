service: tagnet

plugins:
  - serverless-plugin-typescript
  - serverless-api-cloudfront
  - serverless-offline #serverless-offline needs to be last in the list

custom:
  bucketName: tagnet
  apiCloudFront:
    domain: tagnet.io
    certificate: arn:aws:acm:us-east-1:623518205793:certificate/d95735c3-7c50-48bb-b5c3-1bf6a868aa16
    waf: 64282ded-4834-436c-aacf-53d69480e3fa
    compress: true
    logging:
      bucket: tagnet.s3.amazonaws.com
      prefix: tagnet-asset
    cookies: none
    headers:
      - x-api-key
    querystring:
      - page
      - per_page
    priceClass: PriceClass_100
    minimumProtocolVersion: TLSv1

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, env:AWS_STAGE, 'dev'}
  region: ${opt:region, env:AWS_REGION, 'us-east-1'}
  environment:
    REGION: ${self:provider.region}
    BUCKET: { Ref: Uploads }
  versionFunctions: false
  iamRoleStatements:
  -  Effect: "Allow"
     Action:
       - "s3:*"
     Resource: "*"

functions:
  upsert-objects:
    handler: src/upload.handler
    name: ${self:provider.stage}-${self:service}-upload
    memorySize: 128
    events:
      - http:
          path: upload
          method: get
          cors: true
      - http:
          path: upload
          method: get
          cors: true

resources:
  Resources:
    Uploads:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "Authorization"
              AllowedMethods:
                - GET
              AllowedOrigins:
                - "*"
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - PUT
              AllowedOrigins:
                - "*"
